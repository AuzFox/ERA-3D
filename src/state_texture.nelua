require("statemachine")

global function stateTextureInit(sm: *StateMachine, vm: *EVM): void
end

global function stateTextureEnter(sm: *StateMachine, vm: *EVM): void
    vm.gpu:setRenderTexture(RenderTexture.TEXTURE)
end

global function stateTextureExit(sm: *StateMachine, vm: *EVM): void
end

global function stateTextureUpdate(sm: *StateMachine, vm: *EVM): void
    if input.is_ctrl_down and rl.isKeyPressed(rl.keyboardKey.I) then
        sm:resetFileBrowser(core.user_directory, FileBrowserMode.LOAD)
        sm.queued_dialog = DialogID.IMPORT_TEXTURE
        return
    end
end

global function stateTextureDraw(sm: *StateMachine, vm: *EVM): void
    rl.clearBackground({0, 0, 0, 0})
    vm.gpu:camera2D(-1)

    vm.gpu:print2D((GPU_VSCREEN_W /// 2) - ((37 * 6) /// 2), (GPU_VSCREEN_H /// 2) - 9, GPU_WHITE, "// TODO: TEXTURE EDITOR STUFF HERE...")
    vm.gpu:print2D((GPU_VSCREEN_W /// 2) - ((32 * 6) /// 2), GPU_VSCREEN_H /// 2, GPU_GRAY, "PRESS [CTRL+I] TO IMPORT TEXTURE")
end

global function stateTextureCleanup(sm: *StateMachine, vm: *EVM): void
end
