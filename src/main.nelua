require("arg")
require("ecc")
require("evm")
require("state_boot")
require("state_main")
require("state_tracker")
require("state_run")

global vm: *e3d.EVM
global sm: StateMachine

local src_rect: rl.rectangle = {0.0, 0.0, (@float32)(GPU_VSCREEN_W), -(@float32)(GPU_VSCREEN_H)}
local dest_rect: rl.rectangle = {0.0, 0.0, (@float32)(GPU_SCREEN_W), (@float32)(GPU_SCREEN_H)}

local function init(): void
	vm = e3d.newVM()
	e3d.setDefaultBtnmap()

	sm.states = {
		{
			stateBootInit,
			stateBootUpdate,
			stateBootDraw
		},
		{
			stateMainInit,
			stateMainUpdate,
			stateMainDraw
		},
		{
			stateTrackerInit,
			stateTrackerUpdate,
			stateTrackerDraw
		},
		{
			stateRunInit,
			stateRunUpdate,
			stateRunDraw
		}
	}

	sm:init(vm)
end

local function run(): void
	while not rl.windowShouldClose() do
		sm:updateState(vm)
		
		-- update audio stream
		vm.soundchip:updateAudio()

		-- update render settings
		if sm.state_id == StateID.RUN and vm.gpu.update_tex then
			rl.updateTexture(vm.gpu.gfx_texture, &vm.gpu.tmem)
			vm.gpu.update_tex = false
		end

		rl.beginTextureMode(vm.gpu.gfx_rendertex)
			sm:drawState(vm)
			vm.gpu:resetMatrixStack()
		rl.endTextureMode()

		rl.beginDrawing()
			rl.clearBackground(rl.BLACK)
			rl.drawTexturePro(vm.gpu.gfx_rendertex.texture, src_rect, dest_rect, {0.0, 0.0}, 0.0, rl.WHITE)
		rl.endDrawing()

		sm:setQueuedState()
	end
end

io.printf('HEAP:     0x%08X\n', e3d.HEAP_START_ADDR)
io.printf('TMEM:     0x%08X\n', e3d.TMEM_START_ADDR)
io.printf('OMEM:     0x%08X\n', e3d.OMEM_START_ADDR)
io.printf('AMEM:     0x%08X\n', e3d.AMEM_START_ADDR)
io.printf('UNUSED:   0x%08X\n', e3d.UNUSED_START_ADDR)
io.printf('WMEM:     0x%08X\n', e3d.WMEM_START_ADDR)
io.printf('SMEM:     0x%08X\n', e3d.SMEM_START_ADDR)
io.printf('GLOBALS:  0x%08X\n', e3d.GLOBALS_START_ADDR)
io.printf('LOCALS:   0x%08X\n', e3d.LOCALS_START_ADDR)
io.printf('ARGS:     0x%08X\n', e3d.ARGS_START_ADDR)
io.printf('TBANK:    0x%08X\n', e3d.TBANK_START_ADDR)
io.printf('OBANK:    0x%08X\n', e3d.OBANK_START_ADDR)
io.printf('WBANK:    0x%08X\n', e3d.WBANK_START_ADDR)
io.printf('SBANK:    0x%08X\n', e3d.SBANK_START_ADDR)
io.printf('ROM:      0x%08X\n', e3d.ROM_START_ADDR)
io.printf('MEMCARD:  0x%08X\n', e3d.MEMCARD_START_ADDR)
io.printf('MAX_ADDR: 0x%08X\n', e3d.RAM_MAX_ADDR)

if #arg == 1 then
	init()
	run()
else
	print("SYNTAX: era-3d <script>")
end
